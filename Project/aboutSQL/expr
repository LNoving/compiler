//===----------------------------------------------------------------------===//
// expr begin
// https://dev.mysql.com/doc/refman/5.7/en/expressions.html
//===----------------------------------------------------------------------===//

expr:
    exp OR expr
  | exp || expr
  | exp AND expr
  | exp && expr
  | exp

exp:
  | NOT expr
  | ! expr
  | boolean_primary IS [NOT] {TRUE | FALSE | UNKNOWN}
  | boolean_primary

boolean_primary:
    boolean_primary IS [NOT] NULL
  | boolean_primary comparison_operator predicate
  | boolean_primary comparison_operator {ALL | ANY} (subquery)
  | predicate

comparison_operator: = , >= , > , <= , < , <> , !=

predicate:
    bit_expr [NOT] IN (subquery)
  | bit_expr [NOT] IN (expr [, expr] ...)
  | bit_expr [NOT] REGEXP bit_expr
  | bit_expr

bit_expr:
    bit_expr + bit_exp
  | bit_expr - bit_exp
  | bit_exp

bit_exp:
  | bit_exp * bit_ex
  | bit_exp / bit_ex
  | bit_exp % bit_ex
  | bit_ex

bit_ex:
    + bit_ex
  | - bit_ex
  | simple_expr

simple_expr:  
    identifier
  | identifier.identifier    // table_col
  | identifier ( expr [, expr] ...)    // function_call
  | literal
  | paren_expr

literal:
    int_literal
  | double_literal
  | string_literal

paren_expr:
    ( expr )
  | ( subquery )
  | EXISTS (subquery)


subquery:
  SELECT
    [ DISTINCT ]
    select_expr [, select_expr ...]
    [   FROM table_references
		[WHERE where_condition] 
		[GROUP BY {col_name | expr , ...} [ASC | DESC]] 
		[HAVING where_condition]
		[ORDER BY {col_name | expr , ...} [ASC | DESC]]
    ]

select_expr:
    expr [AS alias]

table_references:
    table_reference [, table_reference ... ]

table_reference:
    table_factor
  | join_table

table_factor:
    tbl_name 
  | table_subquery [AS] alias
  | ( table_references )

join_table:
    table_reference [INNER | CROSS] JOIN table_factor [join_condition]
  | table_reference {LEFT|RIGHT} [OUTER] JOIN table_reference join_condition
  | table_reference NATURAL [{LEFT|RIGHT} [OUTER]] JOIN table_factor

join_condition:
    ON conditional_expr
  | USING (column_list)

//===----------------------------------------------------------------------===//
// expr end
//===----------------------------------------------------------------------===//


